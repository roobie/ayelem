const assert = require('assert')
const hyper = require('hyperhtml/index')
const {bind, wire} = hyper

const _ = require('lodash')

const {className} = require('utility')

const {common: commonStyle} = require('styles')
const style = require('./style')

module.exports = class SimpleTh extends hyper.Component {
  get defaultState () {
    return {
    }
  }

  constructor (props, api = {}) {
    if (props.sortable) {
      assert(_.isFunction(api.updateSort), 'If column is sortable, props must contain a callback named updateSort')
    }
    super()
    this.api = api
    this.props = props
  }

  render () {
    const orderState = this.props.orderState.current
    const classes = className({
      [style.th]: true,
      [style.sortedUp]: orderState === 'asc',
      [style.sortedDown]: orderState === 'desc',
      [commonStyle.clickable]: this.props.sortable,
      [commonStyle.disabled]: !this.props.sortable,
      [style.selected]: Boolean(orderState)
    })

    return this.html`<th onclick=${clicked.bind(this)} class=${classes} data-title=${this.props.title}>
      ${this.props.title}
    </th>`

    function clicked () {
      if (!this.props.sortable) {
        return
      }
      this.api.updateSort({column: this.props})
    }
  }
}
