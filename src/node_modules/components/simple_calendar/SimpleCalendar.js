const hyper = require('hyperhtml/index')
const {bind, wire} = hyper
const xtend = require('xtend')
const _ = require('lodash')
const window = require('global/window')
const Intl = window.Intl

const style = require('./style.js')

const DAYS_IN_WEEK = 7

module.exports = class SimpleCalendar extends hyper.Component {
  get defaultState () {
    return {
      selectedDate: new Date()
    }
  }

  constructor (props) {
    super()
    this.props = props
  }

  render () {

    const firstOfMonth = firstDateOfMonth(this.state.selectedDate)
    return this.html`${new SimpleMonth({monthDate: this.props.initialDate})}`
  }
}

class SimpleMonth extends hyper.Component {
  constructor (props) {
    super()
    this.props = props
  }

  render () {
    const formatter = new Intl.DateTimeFormat('sv-SE', {day: 'numeric'})
    const format = (dt) => formatter.format(dt)
    const month = getDaysInMonth(this.props.monthDate)
    return this.html`
<div class=${style.month}>
  ${_.range(6).map(w => wire()`
    <div class=${style.week}>
      ${_.range(DAYS_IN_WEEK)
        .map(d => {
          const date = month[(w * DAYS_IN_WEEK) + d]
          if (!date) return wire()`<span></span>`
          return wire()`
            <div class=${style.date}>
              ${format(date)}
            </div>`
        })}
    </div>`)}
</div>
`
  }
}

function getDaysInMonth (dt) {
  const firstInMonth = firstDateOfMonth(dt)
  const month = [firstInMonth]
  for (let i = 1, next = addDays(firstInMonth, i);
       next.getDate() > 1;
       ++i, next = addDays(firstInMonth, i)) {
    month.push(next)
  }

  return month
}

function firstDateOfMonth (dt) {
  return new Date(dt.getFullYear(), dt.getMonth(), 1)
}

function addDays (dt, n = 1) {
  return new Date(dt.getFullYear(), dt.getMonth(), dt.getDate() + n)
}
