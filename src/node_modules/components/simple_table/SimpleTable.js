const hyper = require('hyperhtml/index')
const {bind, wire} = hyper

const SimpleTh = require('./SimpleTh')
const SimpleTr = require('./SimpleTr')

module.exports = class SimpleTable extends hyper.Component {
  get defaultState () {
    return {
      // all items that are currently rendered
      // type: Array<Any>
      items: [],

      // the items that have been selected in the UI
      // type: same as this.items
      selectedItems: [],

      // the filters that have been applied
      appliedFilters: [],
    }
  }

  /**
    @param props {Object}
    @param props.initialState {Object}
    @param props.getData {Array<Filter> -> Promise<Array<Object>>}
  */
  constructor (props) {
    super()
    this.props = props
    this.setState(props.initialState)
  }

  render() {
    const html = this.html.bind(this) // just to make Atom hilite the template
    return html`
      <div>
        <table class=table>
          <thead>
            <tr>
              ${this.props.columns.map(column => new SimpleTh(column))}
            </tr>
          </thead>
          <tbody>
            ${this.props.items.map(item => {
              return new SimpleTr({ columns: this.props.columns, item})
            })}
          </tbody>
        </table>
      </div>`
  }
}
